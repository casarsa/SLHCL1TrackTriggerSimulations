diff --git a/IOMC/ParticleGuns/interface/FlatRandomOneOverPtGunProducer.h b/IOMC/ParticleGuns/interface/FlatRandomOneOverPtGunProducer.h
index d2c6bdc..ab2dcda 100644
--- a/IOMC/ParticleGuns/interface/FlatRandomOneOverPtGunProducer.h
+++ b/IOMC/ParticleGuns/interface/FlatRandomOneOverPtGunProducer.h
@@ -26,6 +26,9 @@ namespace edm
     
     double            fMinOneOverPt   ;
     double            fMaxOneOverPt   ;
+    double            fXFlatSpread   ;
+    double            fYFlatSpread   ;
+    double            fZFlatSpread   ;
 
   };
 } 
diff --git a/IOMC/ParticleGuns/interface/FlatRandomPtGunProducer.h b/IOMC/ParticleGuns/interface/FlatRandomPtGunProducer.h
index 5d0e022..4ee0410 100644
--- a/IOMC/ParticleGuns/interface/FlatRandomPtGunProducer.h
+++ b/IOMC/ParticleGuns/interface/FlatRandomPtGunProducer.h
@@ -27,6 +27,9 @@ namespace edm
     
     double            fMinPt   ;
     double            fMaxPt   ;
+    double            fXFlatSpread   ;
+    double            fYFlatSpread   ;
+    double            fZFlatSpread   ;
 
   };
 } 
diff --git a/IOMC/ParticleGuns/src/FlatRandomOneOverPtGunProducer.cc b/IOMC/ParticleGuns/src/FlatRandomOneOverPtGunProducer.cc
index ff29a0d..70f6cb0 100644
--- a/IOMC/ParticleGuns/src/FlatRandomOneOverPtGunProducer.cc
+++ b/IOMC/ParticleGuns/src/FlatRandomOneOverPtGunProducer.cc
@@ -22,6 +22,9 @@ FlatRandomOneOverPtGunProducer::FlatRandomOneOverPtGunProducer(const edm::Parame
   
   fMinOneOverPt = pgun_params.getParameter<double>("MinOneOverPt");
   fMaxOneOverPt = pgun_params.getParameter<double>("MaxOneOverPt");
+  fXFlatSpread  = pgun_params.exists("XFlatSpread") ? pgun_params.getParameter<double>("XFlatSpread") : 0.;
+  fYFlatSpread  = pgun_params.exists("YFlatSpread") ? pgun_params.getParameter<double>("YFlatSpread") : 0.;
+  fZFlatSpread  = pgun_params.exists("ZFlatSpread") ? pgun_params.getParameter<double>("ZFlatSpread") : 0.;
   
   produces<HepMCProduct>();
   produces<GenEventInfoProduct>();
@@ -50,7 +53,10 @@ void FlatRandomOneOverPtGunProducer::produce(Event &e, const EventSetup& es) {
   //
   // 1st, primary vertex
   //
-  HepMC::GenVertex* Vtx = new HepMC::GenVertex(HepMC::FourVector(0.,0.,0.));
+  double xpos = fXFlatSpread > 0. ? fRandomGenerator->fire(-fXFlatSpread,fXFlatSpread) : 0.;
+  double ypos = fYFlatSpread > 0. ? fRandomGenerator->fire(-fYFlatSpread,fYFlatSpread) : 0.;
+  double zpos = fZFlatSpread > 0. ? fRandomGenerator->fire(-fZFlatSpread,fZFlatSpread) : 0.;
+  HepMC::GenVertex* Vtx = new HepMC::GenVertex(HepMC::FourVector(xpos,ypos,zpos));
 
   // loop over particles
   //
diff --git a/IOMC/ParticleGuns/src/FlatRandomPtGunProducer.cc b/IOMC/ParticleGuns/src/FlatRandomPtGunProducer.cc
index 7794763..8dbc826 100644
--- a/IOMC/ParticleGuns/src/FlatRandomPtGunProducer.cc
+++ b/IOMC/ParticleGuns/src/FlatRandomPtGunProducer.cc
@@ -29,6 +29,9 @@ FlatRandomPtGunProducer::FlatRandomPtGunProducer(const ParameterSet& pset) :
   
    fMinPt = pgun_params.getParameter<double>("MinPt");
    fMaxPt = pgun_params.getParameter<double>("MaxPt");
+   fXFlatSpread  = pgun_params.exists("XFlatSpread") ? pgun_params.getParameter<double>("XFlatSpread") : 0.;
+   fYFlatSpread  = pgun_params.exists("YFlatSpread") ? pgun_params.getParameter<double>("YFlatSpread") : 0.;
+   fZFlatSpread  = pgun_params.exists("ZFlatSpread") ? pgun_params.getParameter<double>("ZFlatSpread") : 0.;
   
   produces<HepMCProduct>();
   produces<GenEventInfoProduct>();
@@ -59,7 +62,10 @@ void FlatRandomPtGunProducer::produce(Event &e, const EventSetup& es)
    //
    // 1st, primary vertex
    //
-   HepMC::GenVertex* Vtx = new HepMC::GenVertex(HepMC::FourVector(0.,0.,0.));
+   double xpos = fXFlatSpread > 0. ? fRandomGenerator->fire(-fXFlatSpread,fXFlatSpread) : 0.;
+   double ypos = fYFlatSpread > 0. ? fRandomGenerator->fire(-fYFlatSpread,fYFlatSpread) : 0.;
+   double zpos = fZFlatSpread > 0. ? fRandomGenerator->fire(-fZFlatSpread,fZFlatSpread) : 0.;
+   HepMC::GenVertex* Vtx = new HepMC::GenVertex(HepMC::FourVector(xpos,ypos,zpos));
 
    // loop over particles
    //
